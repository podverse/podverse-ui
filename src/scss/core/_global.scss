:root {
  font-size: $root-text-size;
}

html body {
  line-height: $root-text-line-height;

  h1 {
    font-size: $text-3x-rem;
    font-weight: 500;
    margin-bottom: 1rem;
  }

  h2 {
    font-size: $text-2x-rem;
    font-weight: 500;
    margin-bottom: 1rem;
  }

  h3 {
    font-size: $text-xl-rem;
    font-weight: 500;
    margin-bottom: 1rem;
  }

  h4 {
    font-size: $text-lg-rem;
    font-weight: 500;
    margin-bottom: 1.25rem;
  }

  h5 {
    font-size: $text-md-rem;
    font-weight: 500;
    margin-bottom: 1rem;
  }

  h6 {
    font-size: $text-lg-rem;
    font-weight: 500;
    line-height: $text-lg-rem;
    margin: 1.25rem 0;
    padding: 0.25rem 0.5rem;
  }

  p {
    font-size: $text-md-rem;
    font-weight: 300;
    margin: 0 0 1rem 0;
  }

  li {
    font-weight: 300;
  }

  a, a:not([href]):not([tabindex]) {
    cursor: pointer;
  }

  label {
    margin-bottom: 0.75rem;
  }

  button {
    &:disabled {
      cursor: not-allowed;
    }
  }

  hr {
    margin: 1.25rem 0;
  }

  .text-wrapper {
    overflow: hidden;
  }

  .progress-bar {
    position: relative;
    transition: none;
  }

  .hide {
    display: none;
  }

  @media (max-width: 399px) {
    .hide-tiny {  
      display: none;
    }
  }

  .italic {
    font-style: italic;
  }

  .close-btn {
    height: 42px;
    position: absolute;
    right: 16px;
    top: 14px;
    width: 42px;
  }

  .btn.focus, .btn:focus {
    box-shadow: 0 0 0 0.25rem rgba(108, 117, 125, 0.5);
  }

  .transparent-btn, .transparent-btn button {
    background: none !important;
    border: none !important;
  }

  .info-img {
    padding: 1.5rem 0;
    text-align: center;
  }

  .responsive {
    max-width: 100%;
  }

  .no-wrap div {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .over-media-player {
    position: absolute;
    z-index: 101;
    height: 1px;
    width: 1px;
    bottom: 1px;
  }

  .pv-divider {
    border: 1px solid transparent;
    margin: 1.25rem 0;
  }

  .ReactModal__Overlay {
    z-index: 99;
  }

  // This rule prevents the cursor from disappearing in inputs on iOS Safari
  .ReactModal__Content.ReactModal__Content--after-open {
    overflow: initial !important;
  }

  .reduced-margin {
    .media-list__container {
      margin: 0.25rem 0;
    }
    hr.pv-divider {
      margin: 0.25rem 0;
    }
  }

  .nsfw-badge {
    background-color: $red;
    color: $white;
  }
}

html[data-theme=light] body {
  background-color: $white;
  color: $black;

  // Next.js puts contents in div.view and has a #fff bg by default
  body, .view {
    background-color: $white;
  }

  h1, h2, h3, h4, h5 {
    color: $black;
  }

  h6 {
    background-color: $black;
    color: $gray-lightest;
  }

  p {
    color: $black;
  }

  a, a:not([href]):not([tabindex]) {
    color: $blue-darker;
    
    &:hover {
      color: $blue;
    }
  }
  
  label {
    color: $black;
  }

  li {
    color: $black;
  }

  hr {
    border-color: $gray-lighter;
  }

  .close-btn {
    color: $black;
  }

  .btn-secondary, .btn-secondary.btn-text {
    color: $white;
  }

  .btn-text {
    color: $black;
  }

  .btn-outline-secondary {
    color: $black;

    &:hover {
      background-color: $gray-lightest;
    }
    
    &:not(:disabled):not(.disabled).active {
      background-color: $gray;
    }
  }

  .transparent-btn, .transparent-btn button.btn {
    color: $black;
  }

  .ReactModal__Overlay {
    background-color: rgba(255, 255, 255, 0.75) !important;

    .ReactModal__Content {
      background-color: $white !important;
      border-color: $gray-dark !important;

      h5 {
        color: $black;
      }
    }
  }
}

html[data-theme=dark] body {
  background-color: $black;
  color: $white;

  // Next.js puts contents in div.view and has a #fff bg by default
  body, .view {
    background-color: $black;
  }

  h1, h2, h3, h4, h5 {
    color: $gray-light;
  }

  h6 {
    background-color: $white;
    color: $gray-darker;
  }

  p {
    color: $white;
  }

  a, a:not([href]):not([tabindex]) {
    color: $blue-lighter;

    &:hover {
      color: $blue;
    }
  }

  label {
    color: $white;
  }

  li {
    color: $white;
  }

  hr {
    border-color: $gray-darker;
  }

  .close-btn {
    color: $white;
  }

  .btn-secondary, .btn-secondary.btn-text {
    color: $white;
  }

  .btn-text {
    color: $white;
  }

  .btn-outline-secondary {
    color: $white;

    &:hover {
      background-color: $gray-darker;
    }
    
    &:not(:disabled):not(.disabled).active {
      background-color: $gray;
    }
  }

  .transparent-btn, .transparent-btn button.btn {
    color: $white;
  }

  .ReactModal__Overlay {
    background-color: rgba(0, 0, 0, 0.75) !important;

    .ReactModal__Content {
      background-color: $black !important;
      border-color: $gray-light !important;

      h5 {
        color: $white;
      }
    }
  }
}